{"ast":null,"code":"// // import React from 'react';\n// import '../css/schedule.css';\n// import { Calendar, dateFnsLocalizer} from \"react-big-calendar\";\n// import format from \"date-fns/format\";\n// import parse from \"date-fns/parse\";\n// import startOfWeek from \"date-fns/startOfWeek\";\n// import getDay from \"date-fns/getDay\";\n// import \"react-big-calendar/lib/css/react-big-calendar.css\"\n// import Modal from \"react-modal\"; \n// import React, { useState } from \"react\";\n// import DatePicker from \"react-date-picker\";\n\n// const locales = {\n//     \"en-US\": require(\"date-fns/locale/en-US\")\n// }\n// const localizer = dateFnsLocalizer ({\n//     format,\n//     parse,\n//     startOfWeek,\n//     getDay,\n//     locales\n// })\n\n// const events = [\n//     {\n//         title: \"Financial Literacy 101\",\n//         allDay: true,\n//         start: new Date(2023,8,0),\n//         end : new Date(2023,8,0)\n//     },\n//     {\n//         title: \"Affordable Housing\",\n//         start: new Date(2023,8,2),\n//         end : new Date(2023,8,2)\n//     },\n//     {\n//         title: \"Financial Literacy: Investing\",\n\n//         start: new Date(2023,8,1),\n//         end : new Date(2023, 8, 1)\n//     }\n// ]\n\n// const Mainschedule = () => {\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n\n//   const [newEvent, setNewEvent] = useState({title: \"\", start: \"\", end: \"\" })\n//   const [allEvents, setAllEvents] = useState(events)\n\n//   function handleAddEvent() {\n//     setAllEvents([...allEvents, newEvent])\n//   }\n\n//   function handleEventClick(event) {\n//     setSelectedEvent(event);\n//     setIsModalOpen(true);\n\n//   }\n\n//   return (\n\n//     <div>\n//       <div className={isModalOpen ? \"hide-dates\" & \"hide-calendar-content\": \"\"}>\n//       <Calendar \n\n//       localizer={localizer} \n//       events={allEvents} \n//       startAccessor=\"start\" \n//       endAccessor=\"end\" \n//       style={{height: 500, margin: \"50px\"}} \n//       onSelectEvent={handleEventClick} // Call the handleEventClick function on event click\n\n//       />\n//       </div>\n\n//           <Modal\n//                 isOpen={isModalOpen}\n//                 onRequestClose={() => setIsModalOpen(false)}\n//                 contentLabel=\"Event Details\"\n//             >\n//                 {selectedEvent && (\n//                     <div>\n//                         <h2>{selectedEvent.title}</h2>\n//                         <p>Start: {selectedEvent.start.toString()}</p>\n//                         <p>End: {selectedEvent.end.toString()}</p>\n\n//                     </div>\n//                 )}\n//             </Modal>\n\n//     </div>\n\n//   )\n// }\n\n// export default Mainschedule;","map":{"version":3,"names":[],"sources":["/Users/Myles/Desktop/Wellversed/front/src/components/mainschedule.js"],"sourcesContent":["// // import React from 'react';\n// import '../css/schedule.css';\n// import { Calendar, dateFnsLocalizer} from \"react-big-calendar\";\n// import format from \"date-fns/format\";\n// import parse from \"date-fns/parse\";\n// import startOfWeek from \"date-fns/startOfWeek\";\n// import getDay from \"date-fns/getDay\";\n// import \"react-big-calendar/lib/css/react-big-calendar.css\"\n// import Modal from \"react-modal\"; \n// import React, { useState } from \"react\";\n// import DatePicker from \"react-date-picker\";\n\n\n// const locales = {\n//     \"en-US\": require(\"date-fns/locale/en-US\")\n// }\n// const localizer = dateFnsLocalizer ({\n//     format,\n//     parse,\n//     startOfWeek,\n//     getDay,\n//     locales\n// })\n\n// const events = [\n//     {\n//         title: \"Financial Literacy 101\",\n//         allDay: true,\n//         start: new Date(2023,8,0),\n//         end : new Date(2023,8,0)\n//     },\n//     {\n//         title: \"Affordable Housing\",\n//         start: new Date(2023,8,2),\n//         end : new Date(2023,8,2)\n//     },\n//     {\n//         title: \"Financial Literacy: Investing\",\n        \n//         start: new Date(2023,8,1),\n//         end : new Date(2023, 8, 1)\n//     }\n// ]\n\n\n\n\n// const Mainschedule = () => {\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n\n//   const [newEvent, setNewEvent] = useState({title: \"\", start: \"\", end: \"\" })\n//   const [allEvents, setAllEvents] = useState(events)\n\n//   function handleAddEvent() {\n//     setAllEvents([...allEvents, newEvent])\n//   }\n\n//   function handleEventClick(event) {\n//     setSelectedEvent(event);\n//     setIsModalOpen(true);\n\n//   }\n\n\n//   return (\n\n\n//     <div>\n//       <div className={isModalOpen ? \"hide-dates\" & \"hide-calendar-content\": \"\"}>\n//       <Calendar \n      \n//       localizer={localizer} \n//       events={allEvents} \n//       startAccessor=\"start\" \n//       endAccessor=\"end\" \n//       style={{height: 500, margin: \"50px\"}} \n//       onSelectEvent={handleEventClick} // Call the handleEventClick function on event click\n\n//       />\n//       </div>\n\n\n//           <Modal\n//                 isOpen={isModalOpen}\n//                 onRequestClose={() => setIsModalOpen(false)}\n//                 contentLabel=\"Event Details\"\n//             >\n//                 {selectedEvent && (\n//                     <div>\n//                         <h2>{selectedEvent.title}</h2>\n//                         <p>Start: {selectedEvent.start.toString()}</p>\n//                         <p>End: {selectedEvent.end.toString()}</p>\n                        \n//                     </div>\n//                 )}\n//             </Modal>\n\n\n//     </div>\n\n    \n//   )\n// }\n\n\n// export default Mainschedule;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAGA;AACA;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}