{"ast":null,"code":"var _jsxFileName = \"/Users/Myles/Desktop/Wellversed/front/src/components/mainschedule.js\",\n  _s = $RefreshSig$();\n// // import React from 'react';\n// import '../css/schedule.css';\n// import { Calendar, dateFnsLocalizer} from \"react-big-calendar\";\n// import format from \"date-fns/format\";\n// import parse from \"date-fns/parse\";\n// import startOfWeek from \"date-fns/startOfWeek\";\n// import getDay from \"date-fns/getDay\";\n// import \"react-big-calendar/lib/css/react-big-calendar.css\"\n// import Modal from \"react-modal\"; \n// import React, { useState } from \"react\";\n// import DatePicker from \"react-date-picker\";\n\n// const locales = {\n//     \"en-US\": require(\"date-fns/locale/en-US\")\n// }\n// const localizer = dateFnsLocalizer ({\n//     format,\n//     parse,\n//     startOfWeek,\n//     getDay,\n//     locales\n// })\n\n// const events = [\n//     {\n//         title: \"Financial Literacy 101\",\n//         allDay: true,\n//         start: new Date(2023,8,0),\n//         end : new Date(2023,8,0)\n//     },\n//     {\n//         title: \"Affordable Housing\",\n//         start: new Date(2023,8,2),\n//         end : new Date(2023,8,2)\n//     },\n//     {\n//         title: \"Financial Literacy: Investing\",\n\n//         start: new Date(2023,8,1),\n//         end : new Date(2023, 8, 1)\n//     }\n// ]\n\n// const Mainschedule = () => {\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n\n//   const [newEvent, setNewEvent] = useState({title: \"\", start: \"\", end: \"\" })\n//   const [allEvents, setAllEvents] = useState(events)\n\n//   function handleAddEvent() {\n//     setAllEvents([...allEvents, newEvent])\n//   }\n\n//   function handleEventClick(event) {\n//     setSelectedEvent(event);\n//     setIsModalOpen(true);\n\n//   }\n\n//   return (\n\n//     <div>\n//       <div className={isModalOpen ? \"hide-dates\" & \"hide-calendar-content\": \"\"}>\n//       <Calendar \n\n//       localizer={localizer} \n//       events={allEvents} \n//       startAccessor=\"start\" \n//       endAccessor=\"end\" \n//       style={{height: 500, margin: \"50px\"}} \n//       onSelectEvent={handleEventClick} // Call the handleEventClick function on event click\n\n//       />\n//       </div>\n\n//           <Modal\n//                 isOpen={isModalOpen}\n//                 onRequestClose={() => setIsModalOpen(false)}\n//                 contentLabel=\"Event Details\"\n//             >\n//                 {selectedEvent && (\n//                     <div>\n//                         <h2>{selectedEvent.title}</h2>\n//                         <p>Start: {selectedEvent.start.toString()}</p>\n//                         <p>End: {selectedEvent.end.toString()}</p>\n\n//                     </div>\n//                 )}\n//             </Modal>\n\n//     </div>\n\n//   )\n// }\n\n// export default Mainschedule;\n\nimport '../css/schedule.css';\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Modal from \"react-modal\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst events = [\n  // Your events data\n];\nconst Mainschedule = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [newEvent, setNewEvent] = useState({\n    title: \"\",\n    start: \"\",\n    end: \"\"\n  });\n  const [allEvents, setAllEvents] = useState(events);\n  function handleAddEvent() {\n    setAllEvents([...allEvents, newEvent]);\n  }\n  function handleEventClick(event) {\n    setSelectedEvent(event);\n    setIsModalOpen(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `calendar-container ${isModalOpen ? \"hide-content\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        events: allEvents,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: 500,\n          margin: \"50px\"\n        },\n        onSelectEvent: handleEventClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Event Details\",\n      children: selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedEvent.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start: \", selectedEvent.start.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"End: \", selectedEvent.end.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n_s(Mainschedule, \"PyduI58NwIT5ROro+1sSc3ZHEkc=\");\n_c = Mainschedule;\nexport default Mainschedule;\nvar _c;\n$RefreshReg$(_c, \"Mainschedule\");","map":{"version":3,"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","Modal","React","useState","DatePicker","jsxDEV","_jsxDEV","locales","require","localizer","events","Mainschedule","_s","isModalOpen","setIsModalOpen","selectedEvent","setSelectedEvent","newEvent","setNewEvent","title","start","end","allEvents","setAllEvents","handleAddEvent","handleEventClick","event","children","className","startAccessor","endAccessor","style","height","margin","onSelectEvent","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","contentLabel","toString","_c","$RefreshReg$"],"sources":["/Users/Myles/Desktop/Wellversed/front/src/components/mainschedule.js"],"sourcesContent":["// // import React from 'react';\n// import '../css/schedule.css';\n// import { Calendar, dateFnsLocalizer} from \"react-big-calendar\";\n// import format from \"date-fns/format\";\n// import parse from \"date-fns/parse\";\n// import startOfWeek from \"date-fns/startOfWeek\";\n// import getDay from \"date-fns/getDay\";\n// import \"react-big-calendar/lib/css/react-big-calendar.css\"\n// import Modal from \"react-modal\"; \n// import React, { useState } from \"react\";\n// import DatePicker from \"react-date-picker\";\n\n\n// const locales = {\n//     \"en-US\": require(\"date-fns/locale/en-US\")\n// }\n// const localizer = dateFnsLocalizer ({\n//     format,\n//     parse,\n//     startOfWeek,\n//     getDay,\n//     locales\n// })\n\n// const events = [\n//     {\n//         title: \"Financial Literacy 101\",\n//         allDay: true,\n//         start: new Date(2023,8,0),\n//         end : new Date(2023,8,0)\n//     },\n//     {\n//         title: \"Affordable Housing\",\n//         start: new Date(2023,8,2),\n//         end : new Date(2023,8,2)\n//     },\n//     {\n//         title: \"Financial Literacy: Investing\",\n        \n//         start: new Date(2023,8,1),\n//         end : new Date(2023, 8, 1)\n//     }\n// ]\n\n\n\n\n// const Mainschedule = () => {\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n\n//   const [newEvent, setNewEvent] = useState({title: \"\", start: \"\", end: \"\" })\n//   const [allEvents, setAllEvents] = useState(events)\n\n//   function handleAddEvent() {\n//     setAllEvents([...allEvents, newEvent])\n//   }\n\n//   function handleEventClick(event) {\n//     setSelectedEvent(event);\n//     setIsModalOpen(true);\n\n//   }\n\n\n//   return (\n\n\n//     <div>\n//       <div className={isModalOpen ? \"hide-dates\" & \"hide-calendar-content\": \"\"}>\n//       <Calendar \n      \n//       localizer={localizer} \n//       events={allEvents} \n//       startAccessor=\"start\" \n//       endAccessor=\"end\" \n//       style={{height: 500, margin: \"50px\"}} \n//       onSelectEvent={handleEventClick} // Call the handleEventClick function on event click\n\n//       />\n//       </div>\n\n\n//           <Modal\n//                 isOpen={isModalOpen}\n//                 onRequestClose={() => setIsModalOpen(false)}\n//                 contentLabel=\"Event Details\"\n//             >\n//                 {selectedEvent && (\n//                     <div>\n//                         <h2>{selectedEvent.title}</h2>\n//                         <p>Start: {selectedEvent.start.toString()}</p>\n//                         <p>End: {selectedEvent.end.toString()}</p>\n                        \n//                     </div>\n//                 )}\n//             </Modal>\n\n\n//     </div>\n\n    \n//   )\n// }\n\n\n// export default Mainschedule;\n\nimport '../css/schedule.css';\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Modal from \"react-modal\"; \nimport React, { useState } from \"react\";\nimport DatePicker from \"react-date-picker\";\n\nconst locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n}\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n})\n\nconst events = [\n    // Your events data\n]\n\nconst Mainschedule = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [selectedEvent, setSelectedEvent] = useState(null);\n\n    const [newEvent, setNewEvent] = useState({ title: \"\", start: \"\", end: \"\" });\n    const [allEvents, setAllEvents] = useState(events);\n\n    function handleAddEvent() {\n        setAllEvents([...allEvents, newEvent]);\n    }\n\n    function handleEventClick(event) {\n        setSelectedEvent(event);\n        setIsModalOpen(true);\n    }\n\n    return (\n        <div>\n            <div className={`calendar-container ${isModalOpen ? \"hide-content\" : \"\"}`}>\n                <Calendar \n                    localizer={localizer} \n                    events={allEvents} \n                    startAccessor=\"start\" \n                    endAccessor=\"end\" \n                    style={{ height: 500, margin: \"50px\" }} \n                    onSelectEvent={handleEventClick}\n                />\n            </div>\n\n            <Modal\n                isOpen={isModalOpen}\n                onRequestClose={() => setIsModalOpen(false)}\n                contentLabel=\"Event Details\"\n            >\n                {selectedEvent && (\n                    <div>\n                        <h2>{selectedEvent.title}</h2>\n                        <p>Start: {selectedEvent.start.toString()}</p>\n                        <p>End: {selectedEvent.end.toString()}</p>\n                        {/* You can add more event details here */}\n                    </div>\n                )}\n            </Modal>\n        </div>\n    )\n}\n\nexport default Mainschedule;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}